package cn.itcast.tcp;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Properties;

//模拟登陆的服务端
public class Demo4LoginServer {
	//创建配置文件
	static File file = new File("F:\\users.properties");
	//生成配置文件类
	static Properties properties = new Properties(); 
	//静态代码块
	static{
		//判断该配置文件是否存在  若不存在则建立一个配置文件
		if(!file.exists()){
			try {
				file.createNewFile();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub
		ServerSocket serverSocket = new ServerSocket(9087);
		Socket socket = serverSocket.accept();
		//获取socket的输入流
		BufferedReader socketInput = new BufferedReader(new InputStreamReader(socket.getInputStream()));
		//获取socket的输出流
	    OutputStreamWriter socketOut =	new OutputStreamWriter((socket.getOutputStream()));
	    while(true){
			//读取客户端发来的数据
			String inf = socketInput.readLine();
			//分割成三块 option userName passWord
			String[] infs = inf.split(" ");
			String option = infs[0];
			String userName = infs[1];
			String passWord = infs[2];
			//因为这边配置文件 和 配置文件类重复的 所以统统写在外面
			if("a".equalsIgnoreCase(option)){
				//登陆
				if(properties.containsKey(userName)){
					//通过userName 获取 值 也就是密码
					String passWord2 = properties.getProperty(userName);
					if(passWord.equalsIgnoreCase(passWord2)){
						socketOut.write("恭喜登陆成功!!!"+"\r\n");
						socketOut.flush();
					}else{
						socketOut.write("输入密码错误 请重新登陆.."+"\r\n");
						socketOut.flush();
					}
				}else{
					socketOut.write("该用户名不存在 请重新登陆.."+"\r\n");
				}
				
				
			}else if("b".equalsIgnoreCase(userName)){
				//注册
				//判断配置文件类中是否存在该用户名
				if(!properties.containsKey(userName)){
					//添加配置信息
					properties.setProperty(userName, passWord);
					//生成配置文件
					properties.store(new FileWriter(file),"users");
					socketOut.write("恭喜注册成功..."+"\r\n");
					socketOut.flush();
				}else{
					socketOut.write("用户名已存在 请重新注册"+"\r\n");
					socketOut.flush();
				}
			}
	    }

	}

}
