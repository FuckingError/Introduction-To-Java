package 集合;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.Scanner;
/*
 * 时间:2017年4月11日20:36:21
 * 目的:模拟注册和登陆
 * 收获:1.拿到要求，首先在主函数中确定框架
 *     2.while(){
 *           if(){
 *           }
 *         }
 *       如果出现该种嵌套,在一个范围中循环,当满足某种条件时，执行某个语句,不满足时执行的语句应当放while循环外
 *     3.学会重写Object类的tostring 和 equals方法
 *     4.学会break Outer; 
 *     5.学会当封装的时候在主函数中赋值   
 *     6.学会将语句块直接重构成一个方法  alt+shift+t 
 *     7.比较某个数据是否存在于集合中有两种方式
 *       (1)使用contain
 *       （2）使用迭代器Iterator it = 集合名.iterator();
 *           while(it.hasNext()){
 *               it.next();获取的元素类型为object 如果需要，可以强制类型转换
 *           }
 */    
class User{
	int number;
	String message;
	
	public void setNumber(int number) {
		this.number = number;
	}
	public void setMessage(String message) {
		this.message = message;
	}
	
	@Override
	public boolean equals(Object obj) {
		// TODO Auto-generated method stub
		User user = (User)obj;
		return this.number == user.number;
	}
	@Override
	public String toString() {
		// TODO Auto-generated method stub
		return "账号："+this.number+"密码:"+this.message;
	}
	
	
}


public class Demo5 {
	public static void main(String[] args)
	{
		Scanner scanner = new Scanner(System.in);
		Collection list = new ArrayList();
		
		while(true){
			System.out.println("请选择功能:"+"A[注册] B[登陆]");
		    String option = scanner.next();
		    
		    if("A".equalsIgnoreCase(option)){
		    	reg(scanner, list);
		    }
		    else if("B".equalsIgnoreCase(option)){
		    	land(scanner, list);
		    	}else{
		    	System.out.println("输入错误，请重新输入");
		    	}
		    }
		}

	public static void land(Scanner scanner, Collection list) {
		System.out.println("您选择了登陆功能");
		boolean flag = false;
		
		Outer:while(true){
			//返回迭代器
			Iterator it = list.iterator();
			
			System.out.println("请输入账号:");
		    int number = scanner.nextInt();
		    
		    while(it.hasNext()){
		    	//获取集合元素
		    	User user = (User) it.next();
			    
		    	if(user.number == number){
			    	while(true){
			    		System.out.println("请输入密码:");
			    	    String message = scanner.next();
			    	    
			    	    if(message.equals(user.message)){
			    	    	System.out.println("登陆成功!!!");
			    	    	break Outer;
			    	    	}else{
			    	    		System.out.println("密码错误,请重新输入密码!");
			    	    	}
			    	    }
			    	}
			    }
		      System.out.println("账号不存在，请重新输入账号!");
		      }
	}

	public static void reg(Scanner scanner, Collection list) {
		System.out.println("您选择了注册功能");
   
		while(true){
			System.out.println("请输入注册的用户账号:");
			
			User user = new User();
			user.setNumber(scanner.nextInt());
		    
		    if(list.contains(user)){
		    	System.out.println("输入账号已注册，请重新输入账号:");
		    }
		    else{
		    	System.out.println("请输入密码：");
		        user.setMessage(scanner.next());
		        System.out.println("注册成功!!!");
		        list.add(user);	
		        System.out.println("已注册:"+list);
		    	break;
		    }
		}
	}
}
